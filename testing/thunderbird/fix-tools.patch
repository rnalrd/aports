--- a/mozilla/tools/profiler/core/platform.h
+++ b/mozilla/tools/profiler/core/platform.h
@@ -29,6 +29,8 @@
 #ifndef TOOLS_PLATFORM_H_
 #define TOOLS_PLATFORM_H_
 
+#include <sys/types.h>
+
 #ifdef ANDROID
 #include <android/log.h>
 #else
--- a/mozilla/tools/profiler/lul/LulElf.cpp
+++ b/mozilla/tools/profiler/lul/LulElf.cpp
@@ -579,10 +579,10 @@
 // Return the non-directory portion of FILENAME: the portion after the
 // last slash, or the whole filename if there are no slashes.
 string BaseFileName(const string &filename) {
-  // Lots of copies!  basename's behavior is less than ideal.
-  char *c_filename = strdup(filename.c_str());
-  string base = basename(c_filename);
-  free(c_filename);
+  // basename's behavior is less than ideal so avoid it
+  const char *c_filename = filename.c_str();
+  const char *p = strrchr(c_filename, '/');
+  string base = p ? p+1 : c_filename;
   return base;
 }
 
--- a/mozilla/tools/profiler/core/platform-linux.cc.orig	2015-06-11 18:39:35.689739054 +0200
+++ b/mozilla/tools/profiler/core/platform-linux.cc	2015-06-11 18:40:04.479706749 +0200
@@ -651,11 +651,13 @@ void OS::Startup() {
 void TickSample::PopulateContext(void* aContext)
 {
   MOZ_ASSERT(aContext);
+#if defined(__GLIBC__)
   ucontext_t* pContext = reinterpret_cast<ucontext_t*>(aContext);
   if (!getcontext(pContext)) {
     context = pContext;
     SetSampleContext(this, aContext);
   }
+#endif
 }
 
 void OS::SleepMicro(int microseconds)
